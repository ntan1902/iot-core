server:
  port: "${SERVER_PORT:8083}"
spring:
  data:
    jpa:
      repositories:
        enabled: true
  jpa:
    properties:
      javax.persistence.query.timeout: "${JAVAX_PERSISTENCE_QUERY_TIMEOUT:30000}"
      hibernate:
        format_sql: "${SPRING_JPA_PROPERTIES_HIBERNATE_FORMAT_SQL:true}"
    open-in-view: false
    hibernate:
      ddl-auto: "${SPRING_JPA_HIBERNATE_DDL_AUTO:update}"
    database-platform: "${SPRING_JPA_DATABASE_PLATFORM:org.hibernate.dialect.PostgreSQLDialect}"
    show-sql: "${SPRING_JPA_SHOW_SQL:true}"

  datasource:
    driverClassName: "${SPRING_DRIVER_CLASS_NAME:org.postgresql.Driver}"
    url: "${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5432/iot_telemetry?createDatabaseIfNotExist=true&useSSL=false&allowPublicKeyRetrieval=true&rewriteBatchedStatements=true}"
    username: "${SPRING_DATASOURCE_USERNAME:postgres}"
    password: "${SPRING_DATASOURCE_PASSWORD:123456}"
    hikari:
      maximumPoolSize: "${SPRING_DATASOURCE_MAXIMUM_POOL_SIZE:16}"
queue:
  rabbitmq:
    telemetry:
      queue-name: "${QUEUE_RABBIT_MQ_QUEUE_NAME:telemetryQueue}"
      exchange-name: "${QUEUE_RABBIT_MQ_EXCHANGE_NAME:telemetryExchange}"
      routing-key-telemetry: "${QUEUE_RABBITMQ_TELEMETRY_ROUTING_KEY_TELEMETRY:telemetry}"
      routing-key-notification-telemetry: "${QUEUE_RABBITMQ_TELEMETRY_ROUTING_KEY_NOTI_TELEMETRY:noti.telemetry}"
      host: "${QUEUE_RABBIT_MQ_HOST:localhost}"
      port: "${QUEUE_RABBIT_MQ_PORT:5672}"
      username: "${QUEUE_RABBIT_MQ_USERNAME:guest}"
      password: "${QUEUE_RABBIT_MQ_PASSWORD:guest}"
      connection-timeout: "${QUEUE_RABBIT_MQ_CONNECTION_TIMEOUT:60000}"
